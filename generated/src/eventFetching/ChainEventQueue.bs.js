// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var JsSdsl = require("js-sdsl");
var Belt_Option = require("rescript/lib/js/belt_Option.js");

function make(maxQueueSize) {
  return {
          pushBacklogCallbacks: new JsSdsl.Queue(),
          popBacklogCallbacks: new JsSdsl.Queue(),
          maxQueueSize: maxQueueSize,
          queue: new JsSdsl.Queue()
        };
}

function insertCallbackAwaitPromise(queue) {
  return new Promise((function (resolve, _reject) {
                queue.push(function (param) {
                      resolve(undefined);
                    });
              }));
}

async function awaitQueueSpaceAndPushItem(self, item) {
  var currentQueueSize = self.queue.size();
  if (currentQueueSize >= self.maxQueueSize) {
    await insertCallbackAwaitPromise(self.pushBacklogCallbacks);
  }
  self.queue.push(item);
  var numberOfItems = 1;
  for(var _n = 1 ,_n_finish = Math.min(numberOfItems, self.popBacklogCallbacks.size()); _n <= _n_finish; ++_n){
    Belt_Option.map(self.popBacklogCallbacks.pop(), (function (popCallback) {
            Curry._1(popCallback, undefined);
          }));
  }
}

function handlePushBackLogCallbacks(self) {
  if (self.queue.size() < self.maxQueueSize) {
    Belt_Option.map(self.pushBacklogCallbacks.pop(), (function (pushCallback) {
            Curry._1(pushCallback, undefined);
          }));
    return ;
  }
  
}

async function popSingleAndAwaitItem(self) {
  var optItem = self.queue.pop();
  var item = optItem !== undefined ? optItem : (await insertCallbackAwaitPromise(self.popBacklogCallbacks), self.queue.pop());
  handlePushBackLogCallbacks(self);
  return item;
}

function popSingle(self) {
  var optItem = self.queue.pop();
  handlePushBackLogCallbacks(self);
  return optItem;
}

function peekFront(self) {
  return self.queue.front();
}

exports.make = make;
exports.insertCallbackAwaitPromise = insertCallbackAwaitPromise;
exports.awaitQueueSpaceAndPushItem = awaitQueueSpaceAndPushItem;
exports.popSingleAndAwaitItem = popSingleAndAwaitItem;
exports.popSingle = popSingle;
exports.peekFront = peekFront;
/* js-sdsl Not a pure module */
