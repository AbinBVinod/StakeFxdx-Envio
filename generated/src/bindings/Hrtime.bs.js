// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_math = require("rescript/lib/js/js_math.js");

function nanoToMilli(nano) {
  return nano / 1000000 | 0;
}

function secToMilli(sec) {
  return Math.imul(sec, 1000);
}

function nanoToTimeTuple(nano) {
  var seconds = Js_math.floor(nano / 1000000000);
  var nanos = nano % 1000000000;
  return [
          seconds,
          nanos
        ];
}

function timeElapsedToNewRef(elapsed, ref) {
  var match = nanoToTimeTuple(elapsed[1] + ref[1] | 0);
  return [
          (elapsed[0] + ref[0] | 0) + match[0] | 0,
          match[1]
        ];
}

function toMillis(param) {
  return Math.imul(param[0], 1000) + (param[1] / 1000000 | 0) | 0;
}

function intFromMillis(prim) {
  return prim;
}

function intFromNanos(prim) {
  return prim;
}

function intFromSeconds(prim) {
  return prim;
}

function makeTimer(prim) {
  return process.hrtime();
}

function timeSince(prim) {
  return process.hrtime(prim);
}

exports.makeTimer = makeTimer;
exports.timeSince = timeSince;
exports.nanoToMilli = nanoToMilli;
exports.secToMilli = secToMilli;
exports.timeElapsedToNewRef = timeElapsedToNewRef;
exports.toMillis = toMillis;
exports.intFromMillis = intFromMillis;
exports.intFromNanos = intFromNanos;
exports.intFromSeconds = intFromSeconds;
/* No side effect */
