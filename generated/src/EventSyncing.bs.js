// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Env = require("./Env.bs.js");
var Config = require("./Config.bs.js");
var Logging = require("./Logging.bs.js");
var Js_promise2 = require("rescript/lib/js/js_promise2.js");
var ChainManager = require("./eventFetching/ChainManager.bs.js");
var EventProcessing = require("./EventProcessing.bs.js");

function startSyncingAllEvents(shouldSyncFromRawEvents) {
  var chainManager = ChainManager.make(Config.config, Env.maxEventFetchedQueueSize, shouldSyncFromRawEvents);
  Logging.info("Starting chain fetchers.");
  ChainManager.startFetchers(chainManager);
  Logging.info("Starting main event processer.");
  Js_promise2.$$catch(EventProcessing.startProcessingEventsOnQueue(chainManager), (function (err) {
          return Promise.resolve(Logging.error({
                          err: err,
                          msg: "EE600: We have hit a top level while error catcher processing events on the queue. Please notify the team on discord."
                        }));
        }));
}

exports.startSyncingAllEvents = startSyncingAllEvents;
/* Env Not a pure module */
