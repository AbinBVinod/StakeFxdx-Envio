// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var EnvSafe = require("rescript-envsafe/src/EnvSafe.bs.js");
var Process = require("process");
var Caml_option = require("rescript/lib/js/caml_option.js");
var S$RescriptStruct = require("rescript-struct/src/S.bs.js");

globalThis.fetch = require('node-fetch')
;

var envSafe = EnvSafe.make(undefined, undefined);

var operatorUrl = EnvSafe.get(envSafe, "ENVIO_OPERATOR_URL", S$RescriptStruct.string(undefined), undefined, "svc/envio-operator", undefined, undefined);

var operatorPort = EnvSafe.get(envSafe, "ENVIO_OPERATOR_PORT", S$RescriptStruct.Int.port(S$RescriptStruct.$$int(undefined), undefined, undefined), undefined, 8081, undefined, undefined);

var commitHash = EnvSafe.get(envSafe, "COMMIT_HASH", S$RescriptStruct.string(undefined), undefined, "latest", undefined, undefined);

var organisationId = EnvSafe.get(envSafe, "ORGANISATION_ID", S$RescriptStruct.string(undefined), undefined, "", undefined, undefined);

var indexerId = EnvSafe.get(envSafe, "INDEXER_ID", S$RescriptStruct.string(undefined), undefined, "", undefined, undefined);

async function createDatabase(param) {
  var response = await fetch("" + operatorUrl + ":" + String(operatorPort) + "/databases", {
        method: "POST",
        body: Caml_option.some("{\n                \"commitHash\": \"" + commitHash + "\",\n                \"indexerId\": \"" + indexerId + "\",\n                \"organisationId\": \"" + organisationId + "\"\n              }"),
        headers: Caml_option.some(new Headers({
                  "Content-type": "application/json"
                }))
      });
  await response.json();
  Process.exit();
}

exports.operatorUrl = operatorUrl;
exports.operatorPort = operatorPort;
exports.commitHash = commitHash;
exports.organisationId = organisationId;
exports.indexerId = indexerId;
exports.createDatabase = createDatabase;
/*  Not a pure module */
