// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var EnvSafe = require("rescript-envsafe/src/EnvSafe.bs.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var S$RescriptStruct = require("rescript-struct/src/S.bs.js");

function getEnvVar(typ, fallback, env, name) {
  var struct;
  if (fallback !== undefined) {
    var fallbackContent = Caml_option.valFromOption(fallback);
    struct = S$RescriptStruct.$$default(S$RescriptStruct.option(typ), (function (param) {
            return fallbackContent;
          }));
  } else {
    struct = typ;
  }
  return EnvSafe.get(env, name, struct, undefined, undefined, undefined, undefined);
}

var partial_arg = S$RescriptStruct.string(undefined);

function getStringEnvVar(param, param$1, param$2) {
  return getEnvVar(partial_arg, param, param$1, param$2);
}

var partial_arg$1 = S$RescriptStruct.option(S$RescriptStruct.string(undefined));

function getOptStringEnvVar(param, param$1, param$2) {
  return getEnvVar(partial_arg$1, param, param$1, param$2);
}

var partial_arg$2 = S$RescriptStruct.$$int(undefined);

function getIntEnvVar(param, param$1, param$2) {
  return getEnvVar(partial_arg$2, param, param$1, param$2);
}

var partial_arg$3 = S$RescriptStruct.option(S$RescriptStruct.$$int(undefined));

function getOptIntEnvVar(param, param$1, param$2) {
  return getEnvVar(partial_arg$3, param, param$1, param$2);
}

var partial_arg$4 = S$RescriptStruct.$$float(undefined);

function getFloatEnvVar(param, param$1, param$2) {
  return getEnvVar(partial_arg$4, param, param$1, param$2);
}

exports.getEnvVar = getEnvVar;
exports.getStringEnvVar = getStringEnvVar;
exports.getOptStringEnvVar = getOptStringEnvVar;
exports.getIntEnvVar = getIntEnvVar;
exports.getOptIntEnvVar = getOptIntEnvVar;
exports.getFloatEnvVar = getFloatEnvVar;
/* partial_arg Not a pure module */
